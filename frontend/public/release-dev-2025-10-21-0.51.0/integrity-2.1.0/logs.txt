=== integrity-2.1.0 ===

>>> curl -sSLf https://scarbs.xyz/api/v1/dl/integrity/2.1.0 -o archive-635806043961114624.tar.zstd

>>> tar --zstd -xf archive-635806043961114624.tar.zstd --strip-components 1

>>> maat-check-versions
[out] Name             Version         Source                        Installed
[out] nodejs           24.5.0          ASDF_NODEJS_VERSION           true
[out] scarb            dev-2025-10-21  ASDF_SCARB_VERSION            true
[out] starknet-foundry 0.51.0          ASDF_STARKNET-FOUNDRY_VERSION true

>>> maat-patch
[err] Installed 1 package in 2ms
[out] diff --git a/Scarb.toml b/Scarb.toml
[out] index f3a2f3e..869aa10 100644
[out] --- a/Scarb.toml
[out] +++ b/Scarb.toml
[out] @@ -23,7 +23,28 @@ keywords = [
[out]  license = "Apache-2.0"
[out]  readme = "README.md"
[out]  repository = "https://github.com/HerodotusDev/integrity"
[out] +cairo-version = "2.12.3+dev-2025-10-21" # NOTE: added by maat-patch, was: None
[out]  
[out]  [dependencies.starknet]
[out]  version = "^2.8.4"
[out]  
[out] +
[out] +[dev-dependencies]
[out] +cairo_test = "2.12.3+dev-2025-10-21" # NOTE: added by maat-patch, was: None
[out] +
[out] +[scripts]
[out] +test = "scarb cairo-test" # NOTE: added by maat-patch, was: None
[out] +
[out] +[tool.scarb]
[out] +allow-prebuilt-plugins = ["snforge_std"] # NOTE: maat-patch added 'snforge_std'
[out] +
[out] +[patch.scarbs-xyz]
[out] +assert_macros = "2.12.3+dev-2025-10-21" # NOTE: added by maat-patch, was: None
[out] +starknet = "2.12.3+dev-2025-10-21" # NOTE: added by maat-patch, was: None
[out] +cairo_test = "2.12.3+dev-2025-10-21" # NOTE: added by maat-patch, was: None
[out] +snforge_std = "0.51.0" # NOTE: added by maat-patch, was: None
[out] +snforge_scarb_plugin = "0.51.0" # NOTE: added by maat-patch, was: None
[out] +
[out] +[patch."https://github.com/foundry-rs/starknet-foundry.git"]
[out] +snforge_std = "0.51.0" # NOTE: added by maat-patch, was: None
[out] +snforge_scarb_plugin = "0.51.0" # NOTE: added by maat-patch, was: None

>>> scarb fetch
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.xyz/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.xyz/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used

>>> scarb tree -q --workspace
[out] integrity v2.1.0 (/mnt/maat-workbench/Scarb.toml)
[out] ├── starknet v2.12.3 (std)
[out] └── [dev-dependencies]
[out]     └── cairo_test v2.12.3 (std)

>>> SCARB_IGNORE_CAIRO_VERSION=true scarb build --workspace --test
[out] warn: patch `snforge_std` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.xyz/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.xyz/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out]    Compiling test(integrity_unittest) integrity v2.1.0 (/mnt/maat-workbench/Scarb.toml)
[out] warn: Plugin diagnostic: Enum with `#[derive(starknet::Store)] has no default variant. Either add one, or add `#[allow(starknet::store_no_default_variant)]`
[out]  --> /mnt/maat-workbench/src/settings.cairo:8:1-13:1
[out]   #[derive(Drop, Copy, PartialEq, Serde, starknet::Store)]
[out]  _^
[out] | ...
[out] | }
[out] |_^
[out] 
[out] warn: Plugin diagnostic: Enum with `#[derive(starknet::Store)] has no default variant. Either add one, or add `#[allow(starknet::store_no_default_variant)]`
[out]  --> /mnt/maat-workbench/src/settings.cairo:15:1-19:1
[out]   #[derive(Drop, Copy, PartialEq, Serde, starknet::Store)]
[out]  _^
[out] | ...
[out] | }
[out] |_^
[out] 
[out] warn: Plugin diagnostic: Enum with `#[derive(starknet::Store)] has no default variant. Either add one, or add `#[allow(starknet::store_no_default_variant)]`
[out]  --> /mnt/maat-workbench/src/settings.cairo:21:1-25:1
[out]   #[derive(Drop, Copy, PartialEq, Serde, starknet::Store)]
[out]  _^
[out] | ...
[out] | }
[out] |_^
[out] 
[out] warn: Usage of deprecated feature `"corelib-internal-use"` with no `#[feature("corelib-internal-use")]` attribute. Note: "Use `starknet` directly"
[out]  --> /mnt/maat-workbench/src/contracts/mocked_fact_registry.cairo:57:9
[out]         starknet::event::EventEmitter,
[out]         ^^^^^^^^
[out] 
[out] warn: Usage of deprecated feature `"starknet-storage-deprecation"` with no `#[feature("starknet-storage-deprecation")]` attribute. Note: "Use `starknet::storage::MutableVecTrait::push` or `starknet::storage::MutableVecTrait::allocate` instead."
[out]  --> /mnt/maat-workbench/src/contracts/mocked_fact_registry.cairo:152:58
[out]                 self.fact_verifications.entry(fact_hash).append().write(verification_hash);
[out]                                                          ^^^^^^
[out] 
[out] warn: Usage of deprecated feature `"deprecated-starknet-consts"` with no `#[feature("deprecated-starknet-consts")]` attribute. Note: "Use `TryInto::try_into` in const context instead."
[out]  --> /mnt/maat-workbench/src/lib_utils.cairo:9:33
[out] use starknet::{ContractAddress, contract_address_const, get_execution_info};
[out]                                 ^^^^^^^^^^^^^^^^^^^^^^
[out] 
[out]     Finished `dev` profile target(s) in 2 seconds

>>> SCARB_IGNORE_CAIRO_VERSION=true scarb lint --workspace --deny-warnings
[out] error: scarb was not compiled with the `lint` command enabled
[out] 
[out] Stack backtrace:
[out]    0: anyhow::error::<impl anyhow::Error>::msg
[out]    1: scarb::commands::lint::do_lint
[out]    2: scarb::commands::lint::run
[out]    3: scarb::commands::run
[out]    4: scarb::main
[out]    5: std::sys::backtrace::__rust_begin_short_backtrace
[out]    6: std::rt::lang_start::{{closure}}
[out]    7: std::rt::lang_start_internal
[out]    8: main
[out]    9: __libc_start_call_main
[out]   10: __libc_start_main_alias_2
[out]   11: _start
Process finished with exit code 1

>>> SCARB_IGNORE_CAIRO_VERSION=true SNFORGE_FUZZER_SEED=1 SNFORGE_IGNORE_FORK_TESTS=1 scarb test --workspace
[out]      Running test integrity (scarb cairo-test)
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.xyz/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.xyz/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out]    Compiling test(integrity_unittest) integrity v2.1.0 (/mnt/maat-workbench/Scarb.toml)
[out] warn: Plugin diagnostic: Enum with `#[derive(starknet::Store)] has no default variant. Either add one, or add `#[allow(starknet::store_no_default_variant)]`
[out]  --> /mnt/maat-workbench/src/settings.cairo:8:1-13:1
[out]   #[derive(Drop, Copy, PartialEq, Serde, starknet::Store)]
[out]  _^
[out] | ...
[out] | }
[out] |_^
[out] 
[out] warn: Plugin diagnostic: Enum with `#[derive(starknet::Store)] has no default variant. Either add one, or add `#[allow(starknet::store_no_default_variant)]`
[out]  --> /mnt/maat-workbench/src/settings.cairo:15:1-19:1
[out]   #[derive(Drop, Copy, PartialEq, Serde, starknet::Store)]
[out]  _^
[out] | ...
[out] | }
[out] |_^
[out] 
[out] warn: Plugin diagnostic: Enum with `#[derive(starknet::Store)] has no default variant. Either add one, or add `#[allow(starknet::store_no_default_variant)]`
[out]  --> /mnt/maat-workbench/src/settings.cairo:21:1-25:1
[out]   #[derive(Drop, Copy, PartialEq, Serde, starknet::Store)]
[out]  _^
[out] | ...
[out] | }
[out] |_^
[out] 
[out] warn: Usage of deprecated feature `"corelib-internal-use"` with no `#[feature("corelib-internal-use")]` attribute. Note: "Use `starknet` directly"
[out]  --> /mnt/maat-workbench/src/contracts/mocked_fact_registry.cairo:57:9
[out]         starknet::event::EventEmitter,
[out]         ^^^^^^^^
[out] 
[out] warn: Usage of deprecated feature `"starknet-storage-deprecation"` with no `#[feature("starknet-storage-deprecation")]` attribute. Note: "Use `starknet::storage::MutableVecTrait::push` or `starknet::storage::MutableVecTrait::allocate` instead."
[out]  --> /mnt/maat-workbench/src/contracts/mocked_fact_registry.cairo:152:58
[out]                 self.fact_verifications.entry(fact_hash).append().write(verification_hash);
[out]                                                          ^^^^^^
[out] 
[out] warn: Usage of deprecated feature `"deprecated-starknet-consts"` with no `#[feature("deprecated-starknet-consts")]` attribute. Note: "Use `TryInto::try_into` in const context instead."
[out]  --> /mnt/maat-workbench/src/lib_utils.cairo:9:33
[out] use starknet::{ContractAddress, contract_address_const, get_execution_info};
[out]                                 ^^^^^^^^^^^^^^^^^^^^^^
[out] 
[out]     Finished `dev` profile target(s) in 2 seconds
[out]      Testing integrity
[out] running 0 tests
[out] test result: ok. 0 passed; 0 failed; 0 ignored; 0 filtered out;

>>> SCARB_IGNORE_CAIRO_VERSION=true maat-test-ls
[out] 
[out] ==============================
[out] CairoLS process exited with code: 1
Process finished with exit code 1
