=== snforge_std-0.49.0 ===

>>> curl -sSLf https://scarbs.xyz/api/v1/dl/snforge_std/0.49.0 -o archive-621372356291112960.tar.zstd

>>> tar --zstd -xf archive-621372356291112960.tar.zstd --strip-components 1

>>> maat-check-versions
[out] Name             Version         Source                        Installed
[out] nodejs           24.5.0          ASDF_NODEJS_VERSION           true
[out] scarb            dev-2025-09-10  ASDF_SCARB_VERSION            true
[out] starknet-foundry 0.49.0          ASDF_STARKNET-FOUNDRY_VERSION true

>>> maat-patch
[err] Installed 1 package in 2ms
[out] diff --git a/Scarb.toml b/Scarb.toml
[out] index 6b92917..6ef36dc 100644
[out] --- a/Scarb.toml
[out] +++ b/Scarb.toml
[out] @@ -19,7 +19,21 @@ license-file = "LICENSE"
[out]  readme = "README.md"
[out]  repository = "https://github.com/foundry-rs/starknet-foundry"
[out]  re-export-cairo-plugins = ["snforge_scarb_plugin"]
[out] +cairo-version = "2.12.2+dev-2025-09-10" # NOTE: added by maat-patch, was: None
[out]  
[out]  [dependencies.snforge_scarb_plugin]
[out]  version = "^0.49.0"
[out]  
[out] +
[out] +[scripts]
[out] +test = "snforge test --fuzzer-seed 1" # NOTE: added by maat-patch, was: None
[out] +
[out] +[tool.scarb]
[out] +allow-prebuilt-plugins = ["snforge_std"] # NOTE: maat-patch added 'snforge_std'
[out] +
[out] +[patch.scarbs-xyz]
[out] +assert_macros = "2.12.2+dev-2025-09-10" # NOTE: added by maat-patch, was: None
[out] +starknet = "2.12.2+dev-2025-09-10" # NOTE: added by maat-patch, was: None
[out] +cairo_test = "2.12.2+dev-2025-09-10" # NOTE: added by maat-patch, was: None
[out] +
[out] +[patch."https://github.com/foundry-rs/starknet-foundry.git"]

>>> scarb fetch
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used

>>> scarb tree -q --workspace
[out] snforge_std v0.49.0 (/mnt/maat-workbench/Scarb.toml)
[out] └── snforge_scarb_plugin v0.49.0

>>> SCARB_IGNORE_CAIRO_VERSION=true scarb build --workspace --test
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out]    Compiling test(snforge_std_unittest) snforge_std v0.49.0 (/mnt/maat-workbench/Scarb.toml)
[out] warn: Usage of deprecated feature `"deprecated-starknet-consts"` with no `#[feature("deprecated-starknet-consts")]` attribute. Note: "Use `TryInto::try_into` in const context instead."
[out]  --> /mnt/maat-workbench/src/cheatcodes.cairo:1:44
[out] use starknet::{ClassHash, ContractAddress, contract_address_const};
[out]                                            ^^^^^^^^^^^^^^^^^^^^^^
[out] 
[out] warn: Usage of deprecated feature `"corelib-internal-use"` with no `#[feature("corelib-internal-use")]` attribute. Note: "Use `starknet` directly"
[out]  --> /mnt/maat-workbench/src/trace.cairo:1:11
[out] use core::starknet::ContractAddress;
[out]           ^^^^^^^^
[out] 
[out]     Finished `dev` profile target(s) in 2 seconds

>>> SCARB_IGNORE_CAIRO_VERSION=true scarb lint --workspace --deny-warnings
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out]      Linting snforge_std v0.49.0 (/mnt/maat-workbench/Scarb.toml)
[out] warn: Usage of deprecated feature `"deprecated-starknet-consts"` with no `#[feature("deprecated-starknet-consts")]` attribute. Note: "Use `TryInto::try_into` in const context instead."
[out]  --> /mnt/maat-workbench/src/cheatcodes.cairo:1:44
[out] use starknet::{ClassHash, ContractAddress, contract_address_const};
[out]                                            ^^^^^^^^^^^^^^^^^^^^^^
[out] 
[out] warn: Plugin diagnostic: using `clone` on type which implements `Copy` trait
[out]  --> /mnt/maat-workbench/src/cheatcodes/contract_class.cairo:127:31
[out]     let class_hash: felt252 = class_hash.clone().into();
[out]                               ^^^^^^^^^^^^^^^^^^
[out] 
[out] warn: Plugin diagnostic: Manual match for Option<T> detected. Consider using ok_or instead
[out]  --> /mnt/maat-workbench/src/byte_array.cairo:17:16-20:9
[out]           return match Serde::<ByteArray>::deserialize(ref x_span) {
[out]  ________________^
[out] | ...
[out] |         };
[out] |_________^
[out] 
[out] warn: Plugin diagnostic: redundant parentheses in enum variant definition
[out]  --> /mnt/maat-workbench/src/config_types.cairo:16:5
[out]     BlockTag: (),
[out]     ^^^^^^^^^^^^
[out] 
[out] warn: Usage of deprecated feature `"corelib-internal-use"` with no `#[feature("corelib-internal-use")]` attribute. Note: "Use `starknet` directly"
[out]  --> /mnt/maat-workbench/src/trace.cairo:1:11
[out] use core::starknet::ContractAddress;
[out]           ^^^^^^^^
[out] 
[out] error: lint checking `snforge_std` failed due to previous errors
[out] 
[out] Stack backtrace:
[out]    0: anyhow::kind::Adhoc::new
[out]    1: anyhow::__private::format_err.104811
[out]    2: scarb::ops::lint::lint
[out]    3: scarb::commands::lint::do_lint
[out]    4: scarb::commands::run
[out]    5: scarb::main
[out]    6: std::sys::backtrace::__rust_begin_short_backtrace
[out]    7: main
[out]    8: __libc_start_call_main
[out]    9: __libc_start_main_alias_2
[out]   10: _start
Process finished with exit code 1

>>> SCARB_IGNORE_CAIRO_VERSION=true SNFORGE_FUZZER_SEED=1 SNFORGE_IGNORE_FORK_TESTS=1 scarb test --workspace
[out]      Running test snforge_std (snforge test --fuzzer-seed 1)
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out]    Compiling test(snforge_std_unittest) snforge_std v0.49.0 (/mnt/maat-workbench/Scarb.toml)
[out] warn: Usage of deprecated feature `"deprecated-starknet-consts"` with no `#[feature("deprecated-starknet-consts")]` attribute. Note: "Use `TryInto::try_into` in const context instead."
[out]  --> /mnt/maat-workbench/src/cheatcodes.cairo:1:44
[out] use starknet::{ClassHash, ContractAddress, contract_address_const};
[out]                                            ^^^^^^^^^^^^^^^^^^^^^^
[out] 
[out] warn: Usage of deprecated feature `"corelib-internal-use"` with no `#[feature("corelib-internal-use")]` attribute. Note: "Use `starknet` directly"
[out]  --> /mnt/maat-workbench/src/trace.cairo:1:11
[out] use core::starknet::ContractAddress;
[out]           ^^^^^^^^
[out] 
[out]     Finished `dev` profile target(s) in 1 second
[out] 
[out] 
[out] Collected 0 test(s) from snforge_std package
[out] Running 0 test(s) from src/
[out] Tests: 0 passed, 0 failed, 0 ignored, 0 filtered out
[out] 

>>> SCARB_IGNORE_CAIRO_VERSION=true maat-test-ls
[err]    0.004875337s  WARN cairo_language_server::config: client does not support `workspace/configuration` requests, config will not be reloaded
[out] Opening file:///mnt/maat-workbench/src/lib.cairo
[out] 
[out] ==============================
[out] Analysis completed, server is idle.
[out] 
[out] ==============================
[out] # Analyzed Crates
[out] ---
[out] ```json
[out] {
[out]   "name": "core",
[out]   "source_paths": [
[out]     "/mnt/maat-cache/scarb/registry/std/v2.12.2/core/src/lib.cairo"
[out]   ],
[out]   "settings": {
[out]     "name": "core",
[out]     "edition": "2024_07",
[out]     "version": "2.12.2",
[out]     "cfg_set": [
[out]       [
[out]         "target",
[out]         "lib"
[out]       ],
[out]       [
[out]         "target",
[out]         "test"
[out]       ]
[out]     ],
[out]     "dependencies": {
[out]       "core": {
[out]         "discriminator": null
[out]       }
[out]     },
[out]     "experimental_features": {
[out]       "negative_impls": true,
[out]       "associated_item_constraints": true,
[out]       "coupons": true,
[out]       "user_defined_inline_macros": false
[out]     }
[out]   },
[out]   "linter_configuration": "Off",
[out]   "plugins": {
[out]     "builtin_plugins": [
[out]       "AssertMacros",
[out]       "Executable",
[out]       "CairoTest"
[out]     ]
[out]   }
[out] }
[out] 
[out] {
[out]   "name": "snforge_std",
[out]   "source_paths": [
[out]     "/mnt/maat-workbench/src/lib.cairo"
[out]   ],
[out]   "settings": {
[out]     "name": "snforge_std",
[out]     "edition": "2024_07",
[out]     "version": "0.49.0",
[out]     "cfg_set": [
[out]       [
[out]         "target",
[out]         "lib"
[out]       ],
[out]       [
[out]         "target",
[out]         "test"
[out]       ],
[out]       "test"
[out]     ],
[out]     "dependencies": {
[out]       "core": {
[out]         "discriminator": null
[out]       },
[out]       "snforge_std": {
[out]         "discriminator": "snforge_std 0.49.0 (path+file:///mnt/maat-workbench/Scarb.toml)"
[out]       }
[out]     },
[out]     "experimental_features": {
[out]       "negative_impls": false,
[out]       "associated_item_constraints": false,
[out]       "coupons": false,
[out]       "user_defined_inline_macros": false
[out]     }
[out]   },
[out]   "linter_configuration": {},
[out]   "plugins": {
[out]     "proc_macros": [
[out]       "snforge_scarb_plugin 0.49.0 (registry+https://scarbs.xyz/)"
[out]     ]
[out]   }
[out] }
[out] ```
[out] 
[out] ==============================
[out] file:///mnt/maat-workbench/src/byte_array.cairo (1)
[out]   (W) Plugin diagnostic: Manual match for Option<T> detected. Consider using ok_or instead [Ln 16, Col 15]
[out] file:///mnt/maat-workbench/src/cheatcodes.cairo (1)
[out]   (W) Usage of deprecated feature `"deprecated-starknet-consts"` with no `#[feature("deprecated-starknet-consts")]` attribute. Note: "Use `TryInto::try_into` in const context instead." [Ln 0, Col 43]
[out] file:///mnt/maat-workbench/src/cheatcodes/contract_class.cairo (1)
[out]   (W) Plugin diagnostic: using `clone` on type which implements `Copy` trait [Ln 126, Col 30]
[out] file:///mnt/maat-workbench/src/config_types.cairo (1)
[out]   (W) Plugin diagnostic: redundant parentheses in enum variant definition [Ln 15, Col 4]
[out] file:///mnt/maat-workbench/src/trace.cairo (1)
[out]   (W) Usage of deprecated feature `"corelib-internal-use"` with no `#[feature("corelib-internal-use")]` attribute. Note: "Use `starknet` directly" [Ln 0, Col 10]
[out] total: 0 errors, 5 warnings, 0 infos, 0 hints
[out] 
[out] ==============================
[out] CairoLS process exited with code: 0
