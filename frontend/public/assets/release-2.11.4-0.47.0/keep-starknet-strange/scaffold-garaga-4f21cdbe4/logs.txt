=== keep-starknet-strange/scaffold-garaga-4f21cdbe4 ===

>>> git clone --depth 1 --no-tags https://github.com/keep-starknet-strange/scaffold-garaga .
[err] Cloning into '.'...

>>> workdir=contracts maat-check-versions
[out] Name             Version         Source                        Installed
[out] nodejs           24.5.0          ASDF_NODEJS_VERSION           true
[out] scarb            2.11.4          ASDF_SCARB_VERSION            true
[out] starknet-foundry 0.47.0          ASDF_STARKNET-FOUNDRY_VERSION true

>>> workdir=contracts maat-patch
[err] Installed 1 package in 2ms
[out] diff --git a/Scarb.toml b/Scarb.toml
[out] index 87157fe..5ac2dee 100644
[out] --- a/Scarb.toml
[out] +++ b/Scarb.toml
[out] @@ -1,2 +1,13 @@
[out]  [workspace]
[out]  members = ["verifier"]
[out] +
[out] +[patch.scarbs-xyz]
[out] +assert_macros = "2.11.4" # NOTE: added by maat-patch, was: None
[out] +starknet = "2.11.4" # NOTE: added by maat-patch, was: None
[out] +cairo_test = "2.11.4" # NOTE: added by maat-patch, was: None
[out] +snforge_std = "0.47.0" # NOTE: added by maat-patch, was: None
[out] +snforge_scarb_plugin = "0.47.0" # NOTE: added by maat-patch, was: None
[out] +
[out] +[patch."https://github.com/foundry-rs/starknet-foundry.git"]
[out] +snforge_std = "0.47.0" # NOTE: added by maat-patch, was: None
[out] +snforge_scarb_plugin = "0.47.0" # NOTE: added by maat-patch, was: None
[out] diff --git a/verifier/Scarb.toml b/verifier/Scarb.toml
[out] index 2005a72..ccf169c 100644
[out] --- a/verifier/Scarb.toml
[out] +++ b/verifier/Scarb.toml
[out] @@ -2,6 +2,7 @@
[out]  name = "verifier"
[out]  version = "0.1.0"
[out]  edition = "2024_07"
[out] +cairo-version = "2.11.4" # NOTE: added by maat-patch, was: None
[out]  
[out]  [dependencies]
[out]  garaga = { git = "https://github.com/keep-starknet-strange/garaga.git", tag = "v0.18.0" }
[out] @@ -17,3 +18,9 @@ cairo_test = "2.11.4"
[out]  [[target.starknet-contract]]
[out]  casm = true
[out]  casm-add-pythonic-hints = true
[out] +
[out] +[scripts]
[out] +test = "scarb cairo-test" # NOTE: added by maat-patch, was: None
[out] +
[out] +[tool.scarb]
[out] +allow-prebuilt-plugins = ["snforge_std"] # NOTE: maat-patch added 'snforge_std'

>>> workdir=contracts scarb fetch

>>> workdir=contracts scarb tree -q --workspace
[out] error: no such command: `tree`
[out] 
[out] Stack backtrace:
[out]    0: anyhow::kind::Adhoc::new
[out]    1: anyhow::__private::format_err.100642
[out]    2: scarb::commands::run
[out]    3: scarb::main
[out]    4: std::sys::backtrace::__rust_begin_short_backtrace
[out]    5: main
[out]    6: __libc_start_call_main
[out]    7: __libc_start_main_impl
[out]    8: _start
Process finished with exit code 1

>>> workdir=contracts scarb build --workspace --test
[out]    Compiling test(verifier_unittest) verifier v0.1.0 (/mnt/maat-workbench/contracts/verifier/Scarb.toml)
[out] warn: Unused import: `verifier::honk_verifier::UltraStarknetHonkVerifier::hades_permutation`
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier.cairo:17:25
[out]     use core::poseidon::hades_permutation;
[out]                         ^^^^^^^^^^^^^^^^^
[out] 
[out] warn: Unused import: `verifier::honk_verifier::UltraStarknetHonkVerifier::ec`
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier.cairo:18:27
[out]     use garaga::circuits::ec;
[out]                           ^^
[out] 
[out] warn: Unused import: `verifier::honk_verifier::UltraStarknetHonkVerifier::u288`
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier.cairo:22:90
[out]         get_eigenvalue, get_min_one_order, get_nG_glv_fake_glv, get_third_root_of_unity, u288, u384,
[out]                                                                                          ^^^^
[out] 
[out] warn: Unused import: `verifier::honk_verifier::UltraStarknetHonkVerifier::VK_HASH`
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier.cairo:32:9
[out]         VK_HASH, is_on_curve_bn254, precomputed_lines,
[out]         ^^^^^^^
[out] 
[out] warn[E0001]: Unused variable. Consider ignoring by prefixing with `_`.
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier.cairo:63:30
[out]             let (transcript, transcript_state, base_rlc) = HonkTranscriptTrait::from_proof::<
[out]                              ^^^^^^^^^^^^^^^^
[out] 
[out] warn: Unused import: `verifier::honk_verifier_circuits::IntoCircuitInputValue`
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier_circuits.cairo:5:51
[out] use garaga::core::circuit::{AddInputResultTrait2, IntoCircuitInputValue, u288IntoCircuitInputValue};
[out]                                                   ^^^^^^^^^^^^^^^^^^^^^
[out] 
[out]     Finished `dev` profile target(s) in 13 seconds

>>> workdir=contracts scarb lint --workspace --deny-warnings
[err] error: unexpected argument '--deny-warnings' found
[err] 
[err]   tip: a similar argument exists: '--no-warnings'
[err] 
[err] Usage: scarb lint --workspace --no-warnings
[err] 
[err] For more information, try '--help'.
Process finished with exit code 2

>>> SNFORGE_FUZZER_SEED=1 SNFORGE_IGNORE_FORK_TESTS=1 workdir=contracts scarb test --workspace
[out]      Running test verifier (scarb cairo-test)
[out]    Compiling test(verifier_unittest) verifier v0.1.0 (/mnt/maat-workbench/contracts/verifier/Scarb.toml)
[out] warn: Unused import: `verifier::honk_verifier::UltraStarknetHonkVerifier::hades_permutation`
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier.cairo:17:25
[out]     use core::poseidon::hades_permutation;
[out]                         ^^^^^^^^^^^^^^^^^
[out] 
[out] warn: Unused import: `verifier::honk_verifier::UltraStarknetHonkVerifier::ec`
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier.cairo:18:27
[out]     use garaga::circuits::ec;
[out]                           ^^
[out] 
[out] warn: Unused import: `verifier::honk_verifier::UltraStarknetHonkVerifier::u288`
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier.cairo:22:90
[out]         get_eigenvalue, get_min_one_order, get_nG_glv_fake_glv, get_third_root_of_unity, u288, u384,
[out]                                                                                          ^^^^
[out] 
[out] warn: Unused import: `verifier::honk_verifier::UltraStarknetHonkVerifier::VK_HASH`
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier.cairo:32:9
[out]         VK_HASH, is_on_curve_bn254, precomputed_lines,
[out]         ^^^^^^^
[out] 
[out] warn[E0001]: Unused variable. Consider ignoring by prefixing with `_`.
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier.cairo:63:30
[out]             let (transcript, transcript_state, base_rlc) = HonkTranscriptTrait::from_proof::<
[out]                              ^^^^^^^^^^^^^^^^
[out] 
[out] warn: Unused import: `verifier::honk_verifier_circuits::IntoCircuitInputValue`
[out]  --> /mnt/maat-workbench/contracts/verifier/src/honk_verifier_circuits.cairo:5:51
[out] use garaga::core::circuit::{AddInputResultTrait2, IntoCircuitInputValue, u288IntoCircuitInputValue};
[out]                                                   ^^^^^^^^^^^^^^^^^^^^^
[out] 
[out]     Finished `dev` profile target(s) in 13 seconds
[out]      Testing verifier
[out] running 0 tests
[out] test result: ok. 0 passed; 0 failed; 0 ignored; 0 filtered out;

>>> workdir=contracts maat-test-ls
[err]    0.003954128s  WARN cairo_language_server::config: client does not support `workspace/configuration` requests, config will not be reloaded
[out] Opening file:///mnt/maat-workbench/contracts/verifier/src/lib.cairo
[out] 
[out] ==============================
[err] Error: analysis timed out
[err]     at Timeout._onTimeout (/root/.local/bin/maat-test-ls:10244:44)
[err]     at listOnTimeout (node:internal/timers:608:17)
[err]     at process.processTimers (node:internal/timers:543:7)
[out] 
[out] ==============================
[out] CairoLS process exited with code: 0
Process finished with exit code 1
