=== alexandria_json-0.6.0 ===

>>> curl -sSLf https://scarbs.xyz/api/v1/dl/alexandria_json/0.6.0 -o archive-615499123902275584.tar.zstd

>>> tar --zstd -xf archive-615499123902275584.tar.zstd --strip-components 1

>>> maat-check-versions
[out] Name             Version            Source                        Installed
[out] nodejs           24.5.0             ASDF_NODEJS_VERSION           true
[out] scarb            2.12.0             ASDF_SCARB_VERSION            true
[out] starknet-foundry nightly-2025-08-26 ASDF_STARKNET-FOUNDRY_VERSION true

>>> maat-patch
[err] Installed 1 package in 2ms
[out] diff --git a/Scarb.toml b/Scarb.toml
[out] index 45a18dc..1b530c7 100644
[out] --- a/Scarb.toml
[out] +++ b/Scarb.toml
[out] @@ -16,7 +16,7 @@ edition = "2023_11"
[out]  description = "Starknet json utilities"
[out]  homepage = "https://github.com/keep-starknet-strange/alexandria/tree/main/src/json"
[out]  readme = "README.md"
[out] -cairo-version = "^2.12.0"
[out] +cairo-version = "2.12.0" # NOTE: added by maat-patch, was: '^2.12.0'
[out]  re-export-cairo-plugins = []
[out]  
[out]  [dependencies.alexandria_macros]
[out] @@ -34,3 +34,19 @@ version = "^2.12.0"
[out]  [tool.fmt]
[out]  sort-module-level-items = true
[out]  
[out] +[tool.scarb]
[out] +allow-prebuilt-plugins = ["snforge_std"] # NOTE: maat-patch added 'snforge_std'
[out] +
[out] +[scripts]
[out] +test = "scarb cairo-test" # NOTE: added by maat-patch, was: None
[out] +
[out] +[patch.scarbs-xyz]
[out] +assert_macros = "2.12.0" # NOTE: added by maat-patch, was: None
[out] +starknet = "2.12.0" # NOTE: added by maat-patch, was: None
[out] +cairo_test = "2.12.0" # NOTE: added by maat-patch, was: None
[out] +snforge_std = {version = "0.48.1+nightly-2025-08-26", registry = "https://scarbs.dev/"} # NOTE: added by maat-patch, was: None
[out] +snforge_scarb_plugin = {version = "0.48.1+nightly-2025-08-26", registry = "https://scarbs.dev/"} # NOTE: added by maat-patch, was: None
[out] +
[out] +[patch."https://github.com/foundry-rs/starknet-foundry.git"]
[out] +snforge_std = {version = "0.48.1+nightly-2025-08-26", registry = "https://scarbs.dev/"} # NOTE: added by maat-patch, was: None
[out] +snforge_scarb_plugin = {version = "0.48.1+nightly-2025-08-26", registry = "https://scarbs.dev/"} # NOTE: added by maat-patch, was: None

>>> scarb fetch
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out]     Updating crates.io index
[out]  Downloading crates ...
[out]   Downloaded borsh v1.5.7
[out]   Downloaded cairo-lang-utils v2.12.0
[out]   Downloaded proc-macro2 v1.0.86
[out]   Downloaded rustc-hash v1.1.0
[out]   Downloaded unescaper v0.1.5
[out]   Downloaded tracing-core v0.1.33
[out]   Downloaded parking_lot v0.12.3
[out]   Downloaded bitflags v2.6.0
[out]   Downloaded oorandom v11.1.4
[out]   Downloaded windows-targets v0.48.5
[out]   Downloaded path-clean v1.0.1
[out]   Downloaded cairo-lang-macro-attributes v0.1.0
[out]   Downloaded data-encoding v2.6.0
[out]   Downloaded xshell v0.2.7
[out]   Downloaded genco v0.17.10
[out]   Downloaded bigdecimal v0.4.7
[out]   Downloaded memchr v2.7.4
[out]   Downloaded hashbrown v0.15.4
[out]   Downloaded libm v0.2.8
[out]   Downloaded cairo-lang-parser v2.12.0
[out]   Downloaded winnow v0.7.12
[out]   Downloaded windows_x86_64_gnullvm v0.52.6
[out]   Downloaded rust-analyzer-salsa v0.17.0-pre.6
[out]   Downloaded cairo-lang-syntax v2.12.0
[out]   Downloaded num-bigint v0.4.6
[out]   Downloaded windows_i686_gnullvm v0.52.6
[out]   Downloaded toml_edit v0.22.27
[out]   Downloaded allocator-api2 v0.2.18
[out]   Downloaded num-traits v0.2.19
[out]   Downloaded toml v0.8.23
[out]   Downloaded pin-project-lite v0.2.15
[out]   Downloaded windows_x86_64_gnullvm v0.48.5
[out]   Downloaded windows_aarch64_gnullvm v0.52.6
[out]   Downloaded itertools v0.14.0
[out]   Downloaded windows_aarch64_gnullvm v0.48.5
[out]   Downloaded colored v3.0.0
[out]   Downloaded semver v1.0.26
[out]   Downloaded lock_api v0.4.12
[out]   Downloaded parking_lot_core v0.9.10
[out]   Downloaded smallvec v1.13.2
[out]   Downloaded num-integer v0.1.46
[out]   Downloaded autocfg v1.3.0
[out]   Downloaded xxhash-rust v0.8.12
[out]   Downloaded scarb-stable-hash v1.0.0
[out]   Downloaded libc v0.2.155
[out]   Downloaded cairo-lang-macro-stable v1.0.0
[out]   Downloaded linkme v0.3.28
[out]   Downloaded cairo-lang-diagnostics v2.12.0
[out]   Downloaded genco-macros v0.17.10
[out]   Downloaded cairo-lang-debug v2.12.0
[out]   Downloaded windows_x86_64_msvc v0.52.6
[out]   Downloaded windows_i686_gnu v0.52.6
[out]   Downloaded windows_x86_64_msvc v0.48.5
[out]   Downloaded windows_x86_64_gnu v0.48.5
[out]   Downloaded windows_i686_msvc v0.52.6
[out]   Downloaded windows_aarch64_msvc v0.48.5
[out]   Downloaded windows_i686_msvc v0.48.5
[out]   Downloaded windows_aarch64_msvc v0.52.6
[out]   Downloaded windows_x86_64_gnu v0.52.6
[out]   Downloaded windows_i686_gnu v0.48.5
[out]   Downloaded serde_spanned v0.6.9
[out]   Downloaded toml_write v0.1.2
[out]   Downloaded cairo-lang-filesystem v2.12.0
[out]   Downloaded scopeguard v1.2.0
[out]   Downloaded linkme-impl v0.3.28
[out]   Downloaded cairo-lang-macro v0.1.1
[out]   Downloaded relative-path v1.9.3
[out]   Downloaded xshell-macros v0.2.7
[out]   Downloaded cairo-lang-syntax-codegen v2.12.0
[out]   Downloaded toml_datetime v0.6.11
[out]   Downloaded cairo-lang-primitive-token v1.0.0
[out]   Downloaded cfg-if v1.0.0
[out]   Downloaded thiserror v1.0.63
[out]   Downloaded redox_syscall v0.5.8
[out]   Downloaded rust-analyzer-salsa-macros v0.17.0-pre.6
[out]   Downloaded equivalent v1.0.1
[out]   Downloaded windows-targets v0.52.6
[out]   Downloaded tracing v0.1.41
[out]   Downloaded stable_deref_trait v1.2.0
[out]   Downloaded triomphe v0.1.14
[out]   Downloaded indexmap v2.10.0
[out]   Downloaded once_cell v1.19.0
[out]   Downloaded thiserror-impl v1.0.63
[out]   Downloaded cfg_aliases v0.2.1
[out]   Downloaded heck v0.4.1
[out]   Downloaded tracing-attributes v0.1.28
[out]   Downloaded foldhash v0.1.5
[out]   Downloaded either v1.13.0
[out]   Downloaded unicode-ident v1.0.12
[out]   Downloaded serde v1.0.219
[out]   Downloaded quote v1.0.36
[out]   Downloaded syn v2.0.87
[out]   Downloaded serde_derive v1.0.219
[out]   Downloaded smol_str v0.3.2
[out]   Downloaded windows-sys v0.48.0

>>> scarb tree -q --workspace
[out] alexandria_json v0.6.0 (/mnt/maat-workbench/Scarb.toml)
[out] ├── alexandria_macros v0.6.0
[out] │   └── cairo_test v2.12.0 (std)
[out] ├── alexandria_math v0.6.0
[out] │   └── cairo_test v2.12.0 (std) (*)
[out] ├── starknet v2.12.0 (std)
[out] └── [dev-dependencies]
[out]     └── cairo_test v2.12.0 (std) (*)

>>> scarb build --workspace --test
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out]     Updating crates.io index
[out]  Downloading crates ...
[out]   Downloaded smol_str v0.3.2
[out]   Downloaded cairo-lang-utils v2.12.0
[out]   Downloaded unicode-ident v1.0.12
[out]   Downloaded serde_derive v1.0.219
[out]   Downloaded syn v2.0.87
[out]   Downloaded quote v1.0.36
[out]   Downloaded windows_i686_msvc v0.52.6
[out]   Downloaded scarb-stable-hash v1.0.0
[out]   Downloaded cairo-lang-syntax-codegen v2.12.0
[out]   Downloaded windows-targets v0.48.5
[out]   Downloaded cairo-lang-filesystem v2.12.0
[out]   Downloaded thiserror-impl v1.0.63
[out]   Downloaded path-clean v1.0.1
[out]   Downloaded data-encoding v2.6.0
[out]   Downloaded xxhash-rust v0.8.12
[out]   Downloaded colored v3.0.0
[out]   Downloaded bitflags v2.6.0
[out]   Downloaded bigdecimal v0.4.7
[out]   Downloaded indexmap v2.10.0
[out]   Downloaded cairo-lang-parser v2.12.0
[out]   Downloaded libm v0.2.8
[out]   Downloaded num-bigint v0.4.6
[out]   Downloaded itertools v0.14.0
[out]   Downloaded winnow v0.7.12
[out]   Downloaded memchr v2.7.4
[out]   Downloaded toml_edit v0.22.27
[out]   Downloaded cairo-lang-syntax v2.12.0
[out]   Downloaded num-traits v0.2.19
[out]   Downloaded toml v0.8.23
[out]   Downloaded oorandom v11.1.4
[out]   Downloaded cairo-lang-diagnostics v2.12.0
[out]   Downloaded relative-path v1.9.3
[out]   Downloaded genco v0.17.10
[out]   Downloaded windows_aarch64_gnullvm v0.52.6
[out]   Downloaded windows_i686_gnu v0.52.6
[out]   Downloaded windows_x86_64_gnullvm v0.48.5
[out]   Downloaded windows_aarch64_gnullvm v0.48.5
[out]   Downloaded windows_x86_64_gnullvm v0.52.6
[out]   Downloaded xshell-macros v0.2.7
[out]   Downloaded windows_i686_gnullvm v0.52.6
[out]   Downloaded xshell v0.2.7
[out]   Downloaded cairo-lang-debug v2.12.0
[out]   Downloaded serde_spanned v0.6.9
[out]   Downloaded scopeguard v1.2.0
[out]   Downloaded cfg-if v1.0.0
[out]   Downloaded once_cell v1.19.0
[out]   Downloaded tracing-core v0.1.33
[out]   Downloaded either v1.13.0
[out]   Downloaded cairo-lang-macro-attributes v0.1.0
[out]   Downloaded cairo-lang-macro-stable v1.0.0
[out]   Downloaded linkme-impl v0.3.28
[out]   Downloaded linkme v0.3.28
[out]   Downloaded libc v0.2.155
[out]   Downloaded cairo-lang-macro v0.1.1
[out]   Downloaded windows_aarch64_msvc v0.48.5
[out]   Downloaded windows_x86_64_msvc v0.48.5
[out]   Downloaded windows_aarch64_msvc v0.52.6
[out]   Downloaded windows_i686_gnu v0.48.5
[out]   Downloaded windows_i686_msvc v0.48.5
[out]   Downloaded windows_x86_64_gnu v0.48.5
[out]   Downloaded windows_x86_64_gnu v0.52.6
[out]   Downloaded genco-macros v0.17.10
[out]   Downloaded semver v1.0.26
[out]   Downloaded toml_datetime v0.6.11
[out]   Downloaded toml_write v0.1.2
[out]   Downloaded lock_api v0.4.12
[out]   Downloaded stable_deref_trait v1.2.0
[out]   Downloaded num-integer v0.1.46
[out]   Downloaded cfg_aliases v0.2.1
[out]   Downloaded cairo-lang-primitive-token v1.0.0
[out]   Downloaded redox_syscall v0.5.8
[out]   Downloaded windows-targets v0.52.6
[out]   Downloaded heck v0.4.1
[out]   Downloaded rust-analyzer-salsa v0.17.0-pre.6
[out]   Downloaded equivalent v1.0.1
[out]   Downloaded hashbrown v0.15.4
[out]   Downloaded autocfg v1.3.0
[out]   Downloaded serde v1.0.219
[out]   Downloaded windows_x86_64_msvc v0.52.6
[out]   Downloaded parking_lot v0.12.3
[out]   Downloaded rustc-hash v1.1.0
[out]   Downloaded smallvec v1.13.2
[out]   Downloaded pin-project-lite v0.2.15
[out]   Downloaded tracing-attributes v0.1.28
[out]   Downloaded tracing v0.1.41
[out]   Downloaded triomphe v0.1.14
[out]   Downloaded thiserror v1.0.63
[out]   Downloaded unescaper v0.1.5
[out]   Downloaded allocator-api2 v0.2.18
[out]   Downloaded foldhash v0.1.5
[out]   Downloaded proc-macro2 v1.0.86
[out]   Downloaded parking_lot_core v0.9.10
[out]   Downloaded rust-analyzer-salsa-macros v0.17.0-pre.6
[out]   Downloaded borsh v1.5.7
[out]   Downloaded windows-sys v0.48.0
[out]    Compiling alexandria_macros v0.6.0
[out]    Compiling proc-macro2 v1.0.86
[out]    Compiling unicode-ident v1.0.12
[out]    Compiling serde v1.0.219
[out]    Compiling autocfg v1.3.0
[out]    Compiling foldhash v0.1.5
[out]    Compiling allocator-api2 v0.2.18
[out]    Compiling equivalent v1.0.1
[out]    Compiling num-traits v0.2.19
[out]    Compiling libc v0.2.155
[out]    Compiling smallvec v1.13.2
[out]    Compiling lock_api v0.4.12
[out]    Compiling quote v1.0.36
[out]    Compiling parking_lot_core v0.9.10
[out]    Compiling syn v2.0.87
[out]    Compiling scopeguard v1.2.0
[out]    Compiling once_cell v1.19.0
[out]    Compiling cfg-if v1.0.0
[out]    Compiling either v1.13.0
[out]    Compiling num-integer v0.1.46
[out]    Compiling itertools v0.14.0
[out]    Compiling tracing-core v0.1.33
[out]    Compiling semver v1.0.26
[out]    Compiling toml_write v0.1.2
[out]    Compiling winnow v0.7.12
[out]    Compiling pin-project-lite v0.2.15
[out]    Compiling stable_deref_trait v1.2.0
[out]    Compiling heck v0.4.1
[out]    Compiling parking_lot v0.12.3
[out]    Compiling genco-macros v0.17.10
[out]    Compiling rustc-hash v1.1.0
[out]    Compiling thiserror v1.0.63
[out]    Compiling oorandom v11.1.4
[out]    Compiling path-clean v1.0.1
[out]    Compiling data-encoding v2.6.0
[out]    Compiling libm v0.2.8
[out]    Compiling xxhash-rust v0.8.12
[out]    Compiling relative-path v1.9.3
[out]    Compiling xshell-macros v0.2.7
[out]    Compiling scarb-stable-hash v1.0.0
[out]    Compiling bigdecimal v0.4.7
[out]    Compiling xshell v0.2.7
[out]    Compiling cairo-lang-primitive-token v1.0.0
[out]    Compiling colored v3.0.0
[out]    Compiling cairo-lang-macro-stable v1.0.0
[out]    Compiling serde_derive v1.0.219
[out]    Compiling tracing-attributes v0.1.28
[out]    Compiling rust-analyzer-salsa-macros v0.17.0-pre.6
[out]    Compiling thiserror-impl v1.0.63
[out]    Compiling unescaper v0.1.5
[out]    Compiling tracing v0.1.41
[out]    Compiling linkme-impl v0.3.28
[out]    Compiling cairo-lang-macro-attributes v0.1.0
[out]    Compiling genco v0.17.10
[out]    Compiling linkme v0.3.28
[out]    Compiling cairo-lang-macro v0.1.1
[out]    Compiling cairo-lang-syntax-codegen v2.12.0
[out]    Compiling hashbrown v0.15.4
[out]    Compiling indexmap v2.10.0
[out]    Compiling num-bigint v0.4.6
[out]    Compiling toml_datetime v0.6.11
[out]    Compiling smol_str v0.3.2
[out]    Compiling serde_spanned v0.6.9
[out]    Compiling triomphe v0.1.14
[out]    Compiling toml_edit v0.22.27
[out]    Compiling rust-analyzer-salsa v0.17.0-pre.6
[out]    Compiling cairo-lang-utils v2.12.0
[out]    Compiling cairo-lang-debug v2.12.0
[out]    Compiling toml v0.8.23
[out]    Compiling cairo-lang-filesystem v2.12.0
[out]    Compiling cairo-lang-syntax v2.12.0
[out]    Compiling cairo-lang-diagnostics v2.12.0
[out]    Compiling cairo-lang-parser v2.12.0
[out]    Compiling alexandria_macros v0.1.0 (/mnt/maat-cache/scarb/registry/src/scarbs.xyz-9djtpev4jug5q/alexandria_macros-0.6.0)
[out]     Finished `release` profile [optimized] target(s) in 37.12s
[out]    Compiling test(alexandria_json_unittest) alexandria_json v0.6.0 (/mnt/maat-workbench/Scarb.toml)
[out]     Finished `dev` profile target(s) in 42 seconds

>>> scarb lint --workspace --deny-warnings
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out]     Updating crates.io index
[out]  Downloading crates ...
[out]   Downloaded serde_derive v1.0.219
[out]   Downloaded quote v1.0.36
[out]   Downloaded tracing v0.1.41
[out]   Downloaded smol_str v0.3.2
[out]   Downloaded proc-macro2 v1.0.86
[out]   Downloaded cairo-lang-utils v2.12.0
[out]   Downloaded syn v2.0.87
[out]   Downloaded borsh v1.5.7
[out]   Downloaded unicode-ident v1.0.12
[out]   Downloaded xxhash-rust v0.8.12
[out]   Downloaded genco-macros v0.17.10
[out]   Downloaded relative-path v1.9.3
[out]   Downloaded linkme-impl v0.3.28
[out]   Downloaded data-encoding v2.6.0
[out]   Downloaded cairo-lang-macro-attributes v0.1.0
[out]   Downloaded path-clean v1.0.1
[out]   Downloaded cairo-lang-diagnostics v2.12.0
[out]   Downloaded genco v0.17.10
[out]   Downloaded scarb-stable-hash v1.0.0
[out]   Downloaded cairo-lang-macro-stable v1.0.0
[out]   Downloaded cairo-lang-syntax-codegen v2.12.0
[out]   Downloaded cairo-lang-macro v0.1.1
[out]   Downloaded xshell v0.2.7
[out]   Downloaded linkme v0.3.28
[out]   Downloaded bitflags v2.6.0
[out]   Downloaded tracing-core v0.1.33
[out]   Downloaded bigdecimal v0.4.7
[out]   Downloaded hashbrown v0.15.4
[out]   Downloaded toml_edit v0.22.27
[out]   Downloaded libm v0.2.8
[out]   Downloaded winnow v0.7.12
[out]   Downloaded itertools v0.14.0
[out]   Downloaded cairo-lang-syntax v2.12.0
[out]   Downloaded allocator-api2 v0.2.18
[out]   Downloaded parking_lot v0.12.3
[out]   Downloaded colored v3.0.0
[out]   Downloaded toml_write v0.1.2
[out]   Downloaded parking_lot_core v0.9.10
[out]   Downloaded smallvec v1.13.2
[out]   Downloaded tracing-attributes v0.1.28
[out]   Downloaded once_cell v1.19.0
[out]   Downloaded windows_x86_64_gnullvm v0.52.6
[out]   Downloaded thiserror v1.0.63
[out]   Downloaded unescaper v0.1.5
[out]   Downloaded windows_aarch64_gnullvm v0.52.6
[out]   Downloaded windows_aarch64_gnullvm v0.48.5
[out]   Downloaded either v1.13.0
[out]   Downloaded windows_i686_gnullvm v0.52.6
[out]   Downloaded rust-analyzer-salsa v0.17.0-pre.6
[out]   Downloaded cairo-lang-debug v2.12.0
[out]   Downloaded rust-analyzer-salsa-macros v0.17.0-pre.6
[out]   Downloaded rustc-hash v1.1.0
[out]   Downloaded stable_deref_trait v1.2.0
[out]   Downloaded thiserror-impl v1.0.63
[out]   Downloaded foldhash v0.1.5
[out]   Downloaded indexmap v2.10.0
[out]   Downloaded memchr v2.7.4
[out]   Downloaded windows_x86_64_gnu v0.48.5
[out]   Downloaded toml v0.8.23
[out]   Downloaded windows_aarch64_msvc v0.48.5
[out]   Downloaded windows_i686_gnu v0.48.5
[out]   Downloaded lock_api v0.4.12
[out]   Downloaded libc v0.2.155
[out]   Downloaded redox_syscall v0.5.8
[out]   Downloaded windows_i686_msvc v0.48.5
[out]   Downloaded windows_x86_64_msvc v0.48.5
[out]   Downloaded windows_aarch64_msvc v0.52.6
[out]   Downloaded windows_x86_64_msvc v0.52.6
[out]   Downloaded windows_i686_gnu v0.52.6
[out]   Downloaded windows_x86_64_gnu v0.52.6
[out]   Downloaded windows_i686_msvc v0.52.6
[out]   Downloaded windows-targets v0.52.6
[out]   Downloaded pin-project-lite v0.2.15
[out]   Downloaded xshell-macros v0.2.7
[out]   Downloaded cairo-lang-primitive-token v1.0.0
[out]   Downloaded equivalent v1.0.1
[out]   Downloaded num-traits v0.2.19
[out]   Downloaded triomphe v0.1.14
[out]   Downloaded num-integer v0.1.46
[out]   Downloaded cfg_aliases v0.2.1
[out]   Downloaded windows-targets v0.48.5
[out]   Downloaded cairo-lang-parser v2.12.0
[out]   Downloaded cairo-lang-filesystem v2.12.0
[out]   Downloaded serde_spanned v0.6.9
[out]   Downloaded toml_datetime v0.6.11
[out]   Downloaded oorandom v11.1.4
[out]   Downloaded scopeguard v1.2.0
[out]   Downloaded heck v0.4.1
[out]   Downloaded num-bigint v0.4.6
[out]   Downloaded autocfg v1.3.0
[out]   Downloaded cfg-if v1.0.0
[out]   Downloaded windows_x86_64_gnullvm v0.48.5
[out]   Downloaded semver v1.0.26
[out]   Downloaded serde v1.0.219
[out]   Downloaded windows-sys v0.48.0
[out]    Compiling alexandria_macros v0.6.0
[out]     Finished `release` profile [optimized] target(s) in 0.05s
[out]      Linting alexandria_json v0.6.0 (/mnt/maat-workbench/Scarb.toml)
[out] warn: Plugin diagnostic: Manual match for Option<T> detected. Consider using ok_or instead
[out]  --> /mnt/maat-workbench/src/json.cairo:300:13-303:13
[out]               match self.input.at(self.position) {
[out]  _____________^
[out] | ...
[out] |             }
[out] |_____________^
[out] 
[out] warn: Plugin diagnostic: Manual `unwrap_or` detected. Consider using `unwrap_or()` instead.
[out]  --> /mnt/maat-workbench/src/json.cairo:325:30-328:13
[out]               let input_char = match self.input.at(self.position + i) {
[out]  ______________________________^
[out] | ...
[out] |             };
[out] |_____________^
[out] 
[out] warn: Plugin diagnostic: Manual `unwrap_or` detected. Consider using `unwrap_or()` instead.
[out]  --> /mnt/maat-workbench/src/json.cairo:329:33-332:13
[out]               let expected_char = match expected.at(i) {
[out]  _________________________________^
[out] | ...
[out] |             };
[out] |_____________^
[out] 
[out] warn: Plugin diagnostic: unnecessary double parentheses found. Consider removing them.
[out]  --> /mnt/maat-workbench/src/json.cairo:421:48
[out]             JsonValue::Number(n) => Result::Ok((*n).into()),
[out]                                                ^^^^
[out] 
[out] error: lint checking `alexandria_json` failed due to previous errors
[out] 
[out] Stack backtrace:
[out]    0: anyhow::error::<impl anyhow::Error>::msg
[out]    1: anyhow::__private::format_err.104347
[out]    2: scarb::ops::lint::lint
[out]    3: scarb::commands::lint::do_lint
[out]    4: scarb::commands::run
[out]    5: scarb::main
[out]    6: std::sys::backtrace::__rust_begin_short_backtrace
[out]    7: main
[out]    8: __libc_start_call_main
[out]    9: __libc_start_main_impl
[out]   10: _start
Process finished with exit code 1

>>> SNFORGE_FUZZER_SEED=1 SNFORGE_IGNORE_FORK_TESTS=1 scarb test --workspace
[out]      Running test alexandria_json (scarb cairo-test)
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out]    Compiling alexandria_macros v0.6.0
[out]     Finished `release` profile [optimized] target(s) in 0.04s
[out]    Compiling test(alexandria_json_unittest) alexandria_json v0.6.0 (/mnt/maat-workbench/Scarb.toml)
[out]     Finished `dev` profile target(s) in 3 seconds
[out]      Testing alexandria_json
[out] running 65 tests
[out] test alexandria_json::tests::test_json::test_parse_bool_true ... ok (gas usage est.: 221890)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_missing_fields ... ok (gas usage est.: 1020000)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_decimal_edge_cases ... ok (gas usage est.: 6684020)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_mixed_types ... ok (gas usage est.: 6816630)
[out] test alexandria_json::tests::test_json::test_parse_bool_false ... ok (gas usage est.: 291960)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_type_mismatches ... ok (gas usage est.: 3969290)
[out] test alexandria_json::tests::test_deserialization::test_parse_decimal_from_json ... ok (gas usage est.: 890690)
[out] test alexandria_json::tests::test_json::test_parse_number_positive ... ok (gas usage est.: 232320)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_invalid_string_error ... ok (gas usage est.: 1312780)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_string_fields ... ok (gas usage est.: 11697410)
[out] test alexandria_json::tests::test_deserialization::test_parse_integer_from_json ... ok (gas usage est.: 757570)
[out] test alexandria_json::tests::test_json::test_parse_number_negative ... ok (gas usage est.: 193520)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_malformed_number_error ... ok (gas usage est.: 822550)
[out] test alexandria_json::tests::test_deserialization::test_json_error_invalid_number ... ok (gas usage est.: 468780)
[out] test alexandria_json::tests::test_json::test_parse_number_zero ... ok (gas usage est.: 153400)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_numeric_fields ... ok (gas usage est.: 5994520)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_unexpected_end_of_input ... ok (gas usage est.: 1091150)
[out] test alexandria_json::tests::test_deserialization::test_json_error_invalid_escape_sequence ... ok (gas usage est.: 752120)
[out] test alexandria_json::tests::test_json::test_parse_string_simple ... ok (gas usage est.: 339940)
[out] test alexandria_json::tests::test_deserialization::test_json_error_deserialization_error ... ok (gas usage est.: 67940)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_decimal_struct ... ok (gas usage est.: 2865470)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_boolean_fields ... ok (gas usage est.: 5653400)
[out] test alexandria_json::tests::test_json::test_parse_string_empty ... ok (gas usage est.: 133380)
[out] test alexandria_json::tests::test_deserialization::test_json_error_invalid_number_prefix ... ok (gas usage est.: 467970)
[out] test alexandria_json::tests::test_json::test_parse_array_empty ... ok (gas usage est.: 124830)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_mixed_types_with_decimal ... ok (gas usage est.: 7102150)
[out] test alexandria_json::tests::test_deserialization::test_json_error_unexpected_end_of_input_proper ... ok (gas usage est.: 14070)
[out] test alexandria_json::tests::test_json::test_parse_object_empty ... ok (gas usage est.: 124530)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_array_fields ... ok (gas usage est.: 8532890)
[out] test alexandria_json::tests::test_deserialization::test_json_error_invalid_number_proper ... ok (gas usage est.: 507950)
[out] test alexandria_json::tests::test_json::test_parse_simple_array_with_values ... ok (gas usage est.: 886380)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_decimal_precision_handling ... ok (gas usage est.: 6854940)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_empty_arrays ... ok (gas usage est.: 4264910)
[out] test alexandria_json::tests::test_deserialization::test_json_error_missing_field_comprehensive ... ok (gas usage est.: 1020000)
[out] test alexandria_json::tests::test_json::test_parse_simple_object ... ok (gas usage est.: 2606570)
[out] test alexandria_json::tests::test_json::test_decimal_numbers_now_supported ... ok (gas usage est.: 793790)
[out] test alexandria_json::tests::test_json::test_parse_error_unexpected_character ... ok (gas usage est.: 66740)
[out] test alexandria_json::tests::test_deserialization::test_json_error_type_mismatch_comprehensive ... ok (gas usage est.: 3416490)
[out] test alexandria_json::tests::test_json::test_parse_email_address ... ok (gas usage est.: 4844350)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_comprehensive_roundtrip ... ok (gas usage est.: 15377580)
[out] test alexandria_json::tests::test_json::test_parse_error_unexpected_end ... ok (gas usage est.: 706740)
[out] test alexandria_json::tests::test_deserialization::test_json_error_duplicate_key_comprehensive ... ok (gas usage est.: 2162470)
[out] test alexandria_json::tests::test_json::test_parse_error_invalid_number ... ok (gas usage est.: 87960)
[out] test alexandria_json::tests::test_deserialization::test_deserialize_error_handling ... ok (gas usage est.: 193970)
[out] test alexandria_json::tests::test_deserialization::test_json_error_invalid_string_comprehensive ... ok (gas usage est.: 1312780)
[out] test alexandria_json::tests::test_json::test_parse_special_characters_in_strings ... ok (gas usage est.: 7922960)
[out] test alexandria_json::tests::test_json::test_parse_duplicate_keys_error ... ok (gas usage est.: 1093630)
[out] test alexandria_json::tests::test_serialization::test_serialize_boolean_fields ... ok (gas usage est.: 1477080)
[out] test alexandria_json::tests::test_deserialization::test_json_error_invalid_escape_sequence_comprehensive ... ok (gas usage est.: 752120)
[out] test alexandria_json::tests::test_json::test_parse_string_starting_with_boolean_letters ... ok (gas usage est.: 2052160)
[out] test alexandria_json::tests::test_serialization::test_serialize_array_fields ... ok (gas usage est.: 2327340)
[out] test alexandria_json::tests::test_json::test_parse_duplicate_keys_complex ... ok (gas usage est.: 2758920)
[out] test alexandria_json::tests::test_deserialization::test_json_error_deserialization_error_comprehensive ... ok (gas usage est.: 129820)
[out] test alexandria_json::tests::test_json::test_parse_null ... ok (gas usage est.: 221980)
[out] test alexandria_json::tests::test_serialization::test_serialize_empty_arrays ... ok (gas usage est.: 1392800)
[out] test alexandria_json::tests::test_serialization::test_serialize_string_fields ... ok (gas usage est.: 3496330)
[out] test alexandria_json::tests::test_json::test_parse_complex_nested_json ... ok (gas usage est.: 9264260)
[out] test alexandria_json::tests::test_serialization::test_serialize_numeric_fields ... ok (gas usage est.: 1706460)
[out] test alexandria_json::tests::test_serialization::test_serialize_special_characters ... ok (gas usage est.: 3253850)
[out] test alexandria_json::tests::test_serialization::test_serialize_large_numbers ... ok (gas usage est.: 2154310)
[out] test alexandria_json::tests::test_serialization::test_serialize_mixed_types ... ok (gas usage est.: 2117940)
[out] test alexandria_json::tests::test_serialization::test_serialize_mixed_types_with_decimal ... ok (gas usage est.: 2152620)
[out] test alexandria_json::tests::test_serialization::test_serialize_decimal_edge_cases ... ok (gas usage est.: 1926270)
[out] test alexandria_json::tests::test_serialization::test_serialize_decimal_struct ... ok (gas usage est.: 872940)
[out] test alexandria_json::tests::test_serialization::test_serialize_decimal_precision ... ok (gas usage est.: 1963430)
[out] test result: ok. 65 passed; 0 failed; 0 ignored; 0 filtered out;

>>> maat-test-ls
[err]    0.004126945s  WARN cairo_language_server::config: client does not support `workspace/configuration` requests, config will not be reloaded
[out] Opening file:///mnt/maat-workbench/src/lib.cairo
[out] 
[out] ==============================
[out] Analysis completed, server is idle.
[out] 
[out] ==============================
[out] # Analyzed Crates
[out] ---
[out] ```json
[out] {
[out]   "name": "alexandria_json",
[out]   "source_paths": [
[out]     "/mnt/maat-workbench/src/lib.cairo"
[out]   ],
[out]   "settings": {
[out]     "name": "alexandria_json",
[out]     "edition": "2023_11",
[out]     "version": "0.6.0",
[out]     "cfg_set": [
[out]       [
[out]         "target",
[out]         "lib"
[out]       ],
[out]       [
[out]         "target",
[out]         "test"
[out]       ],
[out]       "test"
[out]     ],
[out]     "dependencies": {
[out]       "alexandria_json": {
[out]         "discriminator": "alexandria_json 0.6.0 (path+file:///mnt/maat-workbench/Scarb.toml)"
[out]       },
[out]       "alexandria_math": {
[out]         "discriminator": "alexandria_math 0.6.0 (registry+https://scarbs.xyz/)"
[out]       },
[out]       "core": {
[out]         "discriminator": null
[out]       }
[out]     },
[out]     "experimental_features": {
[out]       "negative_impls": false,
[out]       "associated_item_constraints": false,
[out]       "coupons": false,
[out]       "user_defined_inline_macros": false
[out]     }
[out]   },
[out]   "linter_configuration": {
[out]     "include_compiler_generated_files": false
[out]   },
[out]   "plugins": {
[out]     "builtin_plugins": [
[out]       "AssertMacros",
[out]       "CairoTest",
[out]       "Starknet"
[out]     ],
[out]     "proc_macros": [
[out]       "alexandria_macros 0.6.0 (registry+https://scarbs.xyz/)"
[out]     ]
[out]   }
[out] }
[out] 
[out] {
[out]   "name": "alexandria_math",
[out]   "source_paths": [
[out]     "/mnt/maat-cache/scarb/registry/src/scarbs.xyz-9djtpev4jug5q/alexandria_math-0.6.0/src/lib.cairo"
[out]   ],
[out]   "settings": {
[out]     "name": "alexandria_math",
[out]     "edition": "2023_11",
[out]     "version": "0.6.0",
[out]     "cfg_set": [
[out]       [
[out]         "target",
[out]         "lib"
[out]       ],
[out]       [
[out]         "target",
[out]         "test"
[out]       ]
[out]     ],
[out]     "dependencies": {
[out]       "alexandria_math": {
[out]         "discriminator": "alexandria_math 0.6.0 (registry+https://scarbs.xyz/)"
[out]       },
[out]       "core": {
[out]         "discriminator": null
[out]       }
[out]     },
[out]     "experimental_features": {
[out]       "negative_impls": false,
[out]       "associated_item_constraints": false,
[out]       "coupons": false,
[out]       "user_defined_inline_macros": false
[out]     }
[out]   },
[out]   "linter_configuration": "Off",
[out]   "plugins": {
[out]     "builtin_plugins": [
[out]       "AssertMacros",
[out]       "CairoTest"
[out]     ]
[out]   }
[out] }
[out] 
[out] {
[out]   "name": "core",
[out]   "source_paths": [
[out]     "/mnt/maat-cache/scarb/registry/std/v2.12.0/core/src/lib.cairo"
[out]   ],
[out]   "settings": {
[out]     "name": "core",
[out]     "edition": "2024_07",
[out]     "version": "2.12.0",
[out]     "cfg_set": [
[out]       [
[out]         "target",
[out]         "lib"
[out]       ],
[out]       [
[out]         "target",
[out]         "test"
[out]       ]
[out]     ],
[out]     "dependencies": {
[out]       "core": {
[out]         "discriminator": null
[out]       }
[out]     },
[out]     "experimental_features": {
[out]       "negative_impls": true,
[out]       "associated_item_constraints": true,
[out]       "coupons": true,
[out]       "user_defined_inline_macros": false
[out]     }
[out]   },
[out]   "linter_configuration": "Off",
[out]   "plugins": {
[out]     "builtin_plugins": [
[out]       "AssertMacros",
[out]       "Executable",
[out]       "CairoTest"
[out]     ]
[out]   }
[out] }
[out] ```
[out] 
[out] ==============================
[out] file:///mnt/maat-workbench/src/json.cairo (4)
[out]   (W) Plugin diagnostic: Manual match for Option<T> detected. Consider using ok_or instead [Ln 299, Col 12]
[out]   (W) Plugin diagnostic: Manual `unwrap_or` detected. Consider using `unwrap_or()` instead. [Ln 324, Col 29]
[out]   (W) Plugin diagnostic: Manual `unwrap_or` detected. Consider using `unwrap_or()` instead. [Ln 328, Col 32]
[out]   (W) Plugin diagnostic: unnecessary double parentheses found. Consider removing them. [Ln 420, Col 47]
[out] file:///mnt/maat-workbench/src/tests/test_json.cairo (29)
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 87, Col 8]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 92, Col 8]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 97, Col 8]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 85, Col 4]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 116, Col 8]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 124, Col 8]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 132, Col 8]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 111, Col 4]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 189, Col 4]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 198, Col 4]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 207, Col 4]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 219, Col 4]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 233, Col 8]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 241, Col 8]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 228, Col 4]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 256, Col 8]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 372, Col 12]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 381, Col 12]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 407, Col 24]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 415, Col 24]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 402, Col 20]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 428, Col 24]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 425, Col 20]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 441, Col 24]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 438, Col 20]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 398, Col 16]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 391, Col 12]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 366, Col 8]
[out]   (W) Plugin diagnostic: Manual assert detected. Consider using assert!() macro instead. [Ln 359, Col 4]
[out] total: 0 errors, 33 warnings, 0 infos, 0 hints
[out] 
[out] ==============================
[out] CairoLS process exited with code: 0
