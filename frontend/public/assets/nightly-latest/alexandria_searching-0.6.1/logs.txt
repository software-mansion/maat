=== alexandria_searching-0.6.1 ===

>>> curl -sSLf https://scarbs.xyz/api/v1/dl/alexandria_searching/0.6.1 -o archive-621282051910426624.tar.zstd

>>> tar --zstd -xf archive-621282051910426624.tar.zstd --strip-components 1

>>> maat-check-versions
[out] Name             Version            Source                        Installed
[out] nodejs           24.5.0             ASDF_NODEJS_VERSION           true
[out] scarb            dev-2025-09-10     ASDF_SCARB_VERSION            true
[out] starknet-foundry nightly-2025-08-26 ASDF_STARKNET-FOUNDRY_VERSION true

>>> maat-patch
[err] Installed 1 package in 2ms
[out] diff --git a/Scarb.toml b/Scarb.toml
[out] index cf33b94..69a5d38 100644
[out] --- a/Scarb.toml
[out] +++ b/Scarb.toml
[out] @@ -16,7 +16,7 @@ edition = "2023_11"
[out]  description = "A set of searching algorithms"
[out]  homepage = "https://github.com/keep-starknet-strange/alexandria/tree/main/src/searching"
[out]  readme = "README.md"
[out] -cairo-version = "^2.12.1"
[out] +cairo-version = "2.12.2+dev-2025-09-10" # NOTE: added by maat-patch, was: '^2.12.1'
[out]  re-export-cairo-plugins = []
[out]  
[out]  [dependencies.alexandria_data_structures]
[out] @@ -28,3 +28,19 @@ version = "^2.12.1"
[out]  [tool.fmt]
[out]  sort-module-level-items = true
[out]  
[out] +[tool.scarb]
[out] +allow-prebuilt-plugins = ["snforge_std"] # NOTE: maat-patch added 'snforge_std'
[out] +
[out] +[scripts]
[out] +test = "scarb cairo-test" # NOTE: added by maat-patch, was: None
[out] +
[out] +[patch.scarbs-xyz]
[out] +assert_macros = "2.12.2+dev-2025-09-10" # NOTE: added by maat-patch, was: None
[out] +starknet = "2.12.2+dev-2025-09-10" # NOTE: added by maat-patch, was: None
[out] +cairo_test = "2.12.2+dev-2025-09-10" # NOTE: added by maat-patch, was: None
[out] +snforge_std = {version = "0.48.1+nightly-2025-08-26", registry = "https://scarbs.dev/"} # NOTE: added by maat-patch, was: None
[out] +snforge_scarb_plugin = {version = "0.48.1+nightly-2025-08-26", registry = "https://scarbs.dev/"} # NOTE: added by maat-patch, was: None
[out] +
[out] +[patch."https://github.com/foundry-rs/starknet-foundry.git"]
[out] +snforge_std = {version = "0.48.1+nightly-2025-08-26", registry = "https://scarbs.dev/"} # NOTE: added by maat-patch, was: None
[out] +snforge_scarb_plugin = {version = "0.48.1+nightly-2025-08-26", registry = "https://scarbs.dev/"} # NOTE: added by maat-patch, was: None

>>> scarb fetch
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used

>>> scarb tree -q --workspace
[out] alexandria_searching v0.6.1 (/mnt/maat-workbench/Scarb.toml)
[out] ├── alexandria_data_structures v0.6.1
[out] │   └── cairo_test v2.12.2 (std)
[out] └── [dev-dependencies]
[out]     └── cairo_test v2.12.2 (std) (*)

>>> SCARB_IGNORE_CAIRO_VERSION=true scarb build --workspace --test
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out]    Compiling test(alexandria_searching_unittest) alexandria_searching v0.6.1 (/mnt/maat-workbench/Scarb.toml)
[out]     Finished `dev` profile target(s) in 3 seconds

>>> SCARB_IGNORE_CAIRO_VERSION=true scarb lint --workspace --deny-warnings
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out]      Linting alexandria_searching v0.6.1 (/mnt/maat-workbench/Scarb.toml)
[out] warn: Plugin diagnostic: Manual check for `is_empty` detected. Consider using `is_empty()` instead
[out]  --> /mnt/maat-workbench/src/binary_search.cairo:20:8
[out]     if span.len() == 0 {
[out]        ^^^^^^^^^^^^^^^
[out] 
[out] warn: Plugin diagnostic: Manual check for `is_empty` detected. Consider using `is_empty()` instead
[out]  --> /mnt/maat-workbench/src/binary_search.cairo:70:9
[out]     if (span.len() == 0) {
[out]         ^^^^^^^^^^^^^^^
[out] 
[out] warn: Plugin diagnostic: Unnecessary sub operation in integer <= comparison. Use simplified comparison.
[out]  --> /mnt/maat-workbench/src/bm_search.cairo:72:16
[out]             if pattern_index <= (index + 1) {
[out]                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[out] 
[out] error: lint checking `alexandria_searching` failed due to previous errors
[out] 
[out] Stack backtrace:
[out]    0: anyhow::kind::Adhoc::new
[out]    1: anyhow::__private::format_err.104811
[out]    2: scarb::ops::lint::lint
[out]    3: scarb::commands::lint::do_lint
[out]    4: scarb::commands::run
[out]    5: scarb::main
[out]    6: std::sys::backtrace::__rust_begin_short_backtrace
[out]    7: main
[out]    8: __libc_start_call_main
[out]    9: __libc_start_main_alias_2
[out]   10: _start
Process finished with exit code 1

>>> SCARB_IGNORE_CAIRO_VERSION=true SNFORGE_FUZZER_SEED=1 SNFORGE_IGNORE_FORK_TESTS=1 scarb test --workspace
[out]      Running test alexandria_searching (scarb cairo-test)
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `assert_macros` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `starknet` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_scarb_plugin` (`registry+https://scarbs.dev/`) for source `https://scarbs.xyz/` has not been used
[out] warn: patch `snforge_std` (`registry+https://scarbs.dev/`) for source `https://github.com/foundry-rs/starknet-foundry` has not been used
[out] warn: patch `cairo_test` (`registry+https://scarbs.xyz/`) for source `https://scarbs.xyz/` has not been used
[out]    Compiling test(alexandria_searching_unittest) alexandria_searching v0.6.1 (/mnt/maat-workbench/Scarb.toml)
[out]     Finished `dev` profile target(s) in 2 seconds
[out]      Testing alexandria_searching
[out] running 28 tests
[out] test alexandria_searching::tests::binary_search_test::value_not_found ... ok (gas usage est.: 151160)
[out] test alexandria_searching::tests::binary_search_closest_test::value_found ... ok (gas usage est.: 270910)
[out] test alexandria_searching::tests::binary_search_closest_test::closest_value_found ... ok (gas usage est.: 359090)
[out] test alexandria_searching::tests::bm_search_test::bm_search_test_1 ... ok (gas usage est.: 973870)
[out] test alexandria_searching::tests::binary_search_test::value_found_length_one ... ok (gas usage est.: 5250)
[out] test alexandria_searching::tests::binary_search_closest_test::value_not_found ... ok (gas usage est.: 186200)
[out] test alexandria_searching::tests::bm_search_test::bm_search_test_2 ... ok (gas usage est.: 600330)
[out] test alexandria_searching::tests::binary_search_closest_test::all_values ... ok (gas usage est.: 752380)
[out] test alexandria_searching::tests::binary_search_test::value_not_found_length_one ... ok (gas usage est.: 5450)
[out] test alexandria_searching::tests::binary_search_closest_test::value_found_length_one ... ok (gas usage est.: 6460)
[out] test alexandria_searching::tests::binary_search_test::value_found ... ok (gas usage est.: 191880)
[out] test alexandria_searching::tests::bm_search_test::bm_search_test_3 ... ok (gas usage est.: 872800)
[out] test alexandria_searching::tests::binary_search_test::zero_length_span ... ok (gas usage est.: 2780)
[out] test alexandria_searching::tests::binary_search_closest_test::value_not_found_length_one ... ok (gas usage est.: 6220)
[out] test alexandria_searching::tests::dijkstra_test::add_edge ... ok (gas usage est.: 81910)
[out] test alexandria_searching::tests::binary_search_closest_test::length_two_span ... ok (gas usage est.: 38680)
[out] test alexandria_searching::tests::binary_search_closest_test::zero_length_span ... ok (gas usage est.: 2780)
[out] test alexandria_searching::tests::binary_search_closest_test::length_three_span ... ok (gas usage est.: 111150)
[out] test alexandria_searching::tests::dijkstra_test::calculate_shortest_path ... ok (gas usage est.: 337740)
[out] test alexandria_searching::tests::levenshtein_distance_test::bm_search_test_1 ... ok (gas usage est.: 399760)
[out] test alexandria_searching::tests::levenshtein_distance_test::bm_search_test_2 ... ok (gas usage est.: 5590)
[out] test alexandria_searching::tests::levenshtein_distance_test::bm_search_test_4 ... ok (gas usage est.: 36000)
[out] test alexandria_searching::tests::dijkstra_test::calculate_shortest_path_random ... ok (gas usage est.: 300600)
[out] test alexandria_searching::tests::levenshtein_distance_test::bm_search_test_6 ... ok (gas usage est.: 1026970)
[out] test alexandria_searching::tests::levenshtein_distance_test::bm_search_test_3 ... ok (gas usage est.: 5790)
[out] test alexandria_searching::tests::levenshtein_distance_test::bm_search_test_5 ... ok (gas usage est.: 111130)
[out] test alexandria_searching::tests::dijkstra_test::calculate_shortest_path_node_visited ... ok (gas usage est.: 291600)
[out] test alexandria_searching::tests::levenshtein_distance_test::bm_search_test_7 ... ok (gas usage est.: 1025710)
[out] test result: ok. 28 passed; 0 failed; 0 ignored; 0 filtered out;

>>> SCARB_IGNORE_CAIRO_VERSION=true maat-test-ls
[out] Opening file:///mnt/maat-workbench/src/lib.cairo
[err]    0.008053334s  WARN cairo_language_server::config: client does not support `workspace/configuration` requests, config will not be reloaded
[out] 
[out] ==============================
[out] Analysis completed, server is idle.
[out] 
[out] ==============================
[out] # Analyzed Crates
[out] ---
[out] ```json
[out] {
[out]   "name": "alexandria_data_structures",
[out]   "source_paths": [
[out]     "/mnt/maat-cache/scarb/registry/src/scarbs.xyz-9djtpev4jug5q/alexandria_data_structures-0.6.1/src/lib.cairo"
[out]   ],
[out]   "settings": {
[out]     "name": "alexandria_data_structures",
[out]     "edition": "2023_11",
[out]     "version": "0.6.1",
[out]     "cfg_set": [
[out]       [
[out]         "target",
[out]         "lib"
[out]       ],
[out]       [
[out]         "target",
[out]         "test"
[out]       ]
[out]     ],
[out]     "dependencies": {
[out]       "alexandria_data_structures": {
[out]         "discriminator": "alexandria_data_structures 0.6.1 (registry+https://scarbs.xyz/)"
[out]       },
[out]       "core": {
[out]         "discriminator": null
[out]       }
[out]     },
[out]     "experimental_features": {
[out]       "negative_impls": false,
[out]       "associated_item_constraints": false,
[out]       "coupons": false,
[out]       "user_defined_inline_macros": false
[out]     }
[out]   },
[out]   "linter_configuration": "Off",
[out]   "plugins": {
[out]     "builtin_plugins": [
[out]       "AssertMacros",
[out]       "CairoTest"
[out]     ]
[out]   }
[out] }
[out] 
[out] {
[out]   "name": "alexandria_searching",
[out]   "source_paths": [
[out]     "/mnt/maat-workbench/src/lib.cairo"
[out]   ],
[out]   "settings": {
[out]     "name": "alexandria_searching",
[out]     "edition": "2023_11",
[out]     "version": "0.6.1",
[out]     "cfg_set": [
[out]       [
[out]         "target",
[out]         "lib"
[out]       ],
[out]       [
[out]         "target",
[out]         "test"
[out]       ],
[out]       "test"
[out]     ],
[out]     "dependencies": {
[out]       "alexandria_data_structures": {
[out]         "discriminator": "alexandria_data_structures 0.6.1 (registry+https://scarbs.xyz/)"
[out]       },
[out]       "alexandria_searching": {
[out]         "discriminator": "alexandria_searching 0.6.1 (path+file:///mnt/maat-workbench/Scarb.toml)"
[out]       },
[out]       "core": {
[out]         "discriminator": null
[out]       }
[out]     },
[out]     "experimental_features": {
[out]       "negative_impls": false,
[out]       "associated_item_constraints": false,
[out]       "coupons": false,
[out]       "user_defined_inline_macros": false
[out]     }
[out]   },
[out]   "linter_configuration": {},
[out]   "plugins": {
[out]     "builtin_plugins": [
[out]       "AssertMacros",
[out]       "CairoTest"
[out]     ]
[out]   }
[out] }
[out] 
[out] {
[out]   "name": "core",
[out]   "source_paths": [
[out]     "/mnt/maat-cache/scarb/registry/std/v2.12.2/core/src/lib.cairo"
[out]   ],
[out]   "settings": {
[out]     "name": "core",
[out]     "edition": "2024_07",
[out]     "version": "2.12.2",
[out]     "cfg_set": [
[out]       [
[out]         "target",
[out]         "lib"
[out]       ],
[out]       [
[out]         "target",
[out]         "test"
[out]       ]
[out]     ],
[out]     "dependencies": {
[out]       "core": {
[out]         "discriminator": null
[out]       }
[out]     },
[out]     "experimental_features": {
[out]       "negative_impls": true,
[out]       "associated_item_constraints": true,
[out]       "coupons": true,
[out]       "user_defined_inline_macros": false
[out]     }
[out]   },
[out]   "linter_configuration": "Off",
[out]   "plugins": {
[out]     "builtin_plugins": [
[out]       "AssertMacros",
[out]       "Executable",
[out]       "CairoTest"
[out]     ]
[out]   }
[out] }
[out] ```
[out] 
[out] ==============================
[out] file:///mnt/maat-workbench/src/binary_search.cairo (2)
[out]   (W) Plugin diagnostic: Manual check for `is_empty` detected. Consider using `is_empty()` instead [Ln 19, Col 7]
[out]   (W) Plugin diagnostic: Manual check for `is_empty` detected. Consider using `is_empty()` instead [Ln 69, Col 8]
[out] file:///mnt/maat-workbench/src/bm_search.cairo (1)
[out]   (W) Plugin diagnostic: Unnecessary sub operation in integer <= comparison. Use simplified comparison. [Ln 71, Col 15]
[out] total: 0 errors, 3 warnings, 0 infos, 0 hints
[out] 
[out] ==============================
[out] CairoLS process exited with code: 0
