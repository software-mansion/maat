#!/usr/bin/env -S uv run --script
# /// script
# requires-python = ">=3.13"
# dependencies = [
#   "tomlkit>=0.13.2",
# ]
# ///

import os
from pathlib import Path
from typing import Callable

import tomlkit

COMMENT = "NOTE: Added by maat-patch-deps."


def patch(scarb_toml_path: Path | str, func: Callable[[tomlkit.TOMLDocument], None]):
    path = Path(scarb_toml_path)
    manifest = tomlkit.parse(path.read_text())
    func(manifest)
    path.write_text(tomlkit.dumps(manifest))


def patch_root(manifest: tomlkit.TOMLDocument):
    if "package" in manifest:
        manifest["package"]["cairo-version"] = asdf_scarb_version
        manifest["package"]["cairo-version"].comment(COMMENT)

    if "workspace" in manifest:
        workspace = manifest["workspace"]

        if "package" in workspace:
            workspace["package"]["cairo-version"] = asdf_scarb_version
            workspace["package"]["cairo-version"].comment(COMMENT)

        if "members" in workspace:
            for member in workspace["members"]:
                patch(Path(member) / "Scarb.toml", patch_member)

    patch_table = manifest.setdefault("patch", tomlkit.table())

    if "scarbs-xyz" in patch_table:
        scarbs_patch_table = patch_table["scarbs-xyz"]
    elif '"https://scarbs.xyz/"' in patch_table:
        scarbs_patch_table = patch_table['"https://scarbs.xyz/"']
    else:
        scarbs_patch_table = patch_table.setdefault("scarbs-xyz", tomlkit.table())

    scarbs_patch_table["assert_macros"] = asdf_scarb_version
    scarbs_patch_table["assert_macros"].comment(COMMENT)
    scarbs_patch_table["starknet"] = asdf_scarb_version
    scarbs_patch_table["starknet"].comment(COMMENT)
    scarbs_patch_table["snforge_std"] = asdf_starknet_foundry_version
    scarbs_patch_table["snforge_std"].comment(COMMENT)


def patch_member(manifest: tomlkit.TOMLDocument):
    if "package" in manifest:
        manifest["package"]["cairo-version"] = asdf_scarb_version
        manifest["package"]["cairo-version"].comment(COMMENT)


if __name__ == "__main__":
    asdf_scarb_version = os.getenv("ASDF_SCARB_VERSION")
    assert asdf_scarb_version

    asdf_starknet_foundry_version = os.getenv("ASDF_STARKNET_FOUNDRY_VERSION")
    assert asdf_starknet_foundry_version

    patch("Scarb.toml", patch_root)
